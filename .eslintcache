[{"/Users/andrew/Desktop/Programming/Projects/attributy/src/index.js":"1","/Users/andrew/Desktop/Programming/Projects/attributy/src/App.js":"2","/Users/andrew/Desktop/Programming/Projects/attributy/src/reportWebVitals.js":"3","/Users/andrew/Desktop/Programming/Projects/attributy/src/utils/Routes.js":"4","/Users/andrew/Desktop/Programming/Projects/attributy/src/component/Login.js":"5","/Users/andrew/Desktop/Programming/Projects/attributy/src/component/WeatherPage.js":"6","/Users/andrew/Desktop/Programming/Projects/attributy/src/component/Card.js":"7","/Users/andrew/Desktop/Programming/Projects/attributy/src/component/Context.js":"8","/Users/andrew/Desktop/Programming/Projects/attributy/src/component/Navi.js":"9"},{"size":257,"mtime":1611679618591,"results":"10","hashOfConfig":"11"},{"size":170,"mtime":1611694421589,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611162216393,"results":"13","hashOfConfig":"11"},{"size":1451,"mtime":1611803601022,"results":"14","hashOfConfig":"11"},{"size":2276,"mtime":1611800010815,"results":"15","hashOfConfig":"11"},{"size":5928,"mtime":1611801975951,"results":"16","hashOfConfig":"11"},{"size":508,"mtime":1611801668109,"results":"17","hashOfConfig":"11"},{"size":81,"mtime":1611693364804,"results":"18","hashOfConfig":"11"},{"size":320,"mtime":1611800062304,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"gtr6qn",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/andrew/Desktop/Programming/Projects/attributy/src/index.js",[],["41","42"],"/Users/andrew/Desktop/Programming/Projects/attributy/src/App.js",[],"/Users/andrew/Desktop/Programming/Projects/attributy/src/reportWebVitals.js",[],"/Users/andrew/Desktop/Programming/Projects/attributy/src/utils/Routes.js",["43","44","45"],"/Users/andrew/Desktop/Programming/Projects/attributy/src/component/Login.js",["46","47","48","49"],"import React, { useState, useContext } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { Context } from '../component/Context'\nimport './Login.css'\n\nvar Login = () => {\n    const {name, setName} = useContext(Context);\n    const {location, setLocation} = useContext(Context);\n\n    const setter = () => {\n        setLocation();\n        setName();\n    };\n\n    //useEffect(() => {});\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\" Forms name: \", name, \"Forms location: \", location);\n        \n    };\n\n    return(\n        <>\n            <div className=\"main-wrapper\">\n                <div className=\"header-box\">\n                    <h1>Welcome</h1>\n                    <h3>Tell us about yourself</h3>\n                </div>\n\n                <div className=\"form-box\">\n                    <form className=\"form\" onSubmit={handleSubmit}>\n                        {/* Name */}\n                            <input \n                                type=\"text\" \n                                name=\"name\"\n                                onChange={(e) => setName(e.target.value)}\n                                placeholder=\"Your name\"\n                                />\n                        {/* Location */}\n                            <input \n                                type=\"text\" \n                                name=\"location\"\n                                onChange={(e) => setLocation(e.target.value)}\n                                placeholder=\"Location\"\n                                />\n                        <Link to=\"/weather\">\n                            <input className=\"input-continue\" type=\"submit\" value=\"Continue\"/> \n                        </Link>\n                    </form>\n                </div>\n                {/* <p>{name}</p> */}\n                {/* <p>{location}</p> */}\n            </div>\n        </>\n    );\n}\n\n// Testing state with this component\nconst Hello = (props) => {\n    const {name, setName} = useContext(Context);\n    const {location, setLocation} = useContext(Context);\n\n    return (\n        <div className=\"testing-box\">\n            <p>Testing Box:</p>\n            <p>{name}</p>\n            <p>{location}</p>\n        </div>\n    );\n}\n\n// export default Login;\nexport { Login, Hello };","/Users/andrew/Desktop/Programming/Projects/attributy/src/component/WeatherPage.js",["50","51","52","53","54"],"import React, { useState, useContext, useEffect } from 'react'\nimport { Context } from '../component/Context'\nimport axios from 'axios'\nimport './WeatherPage.css'\nimport Card from './Card'\n\n// Test data set is for testing purposes only\nconst testData = [\n    {\n        day: \"Monday\",\n        temp: \"34\",\n        date: \"Jan 1, 2021\"\n    },\n    {\n        day: \"Tues\",\n        temp: \"28\",\n        date: \"Jan 2, 2021\"\n    },\n    {\n        day: \"Wed\",\n        temp: \"29\",\n        date: \"Jan 3, 2021\"\n    },\n    {\n        day: \"Thur\",\n        temp: \"36\",\n        date: \"Jan 4, 2021\"\n    },\n    {\n        day: \"Fri\",\n        temp: \"31\",\n        date: \"Jan 5, 2021\"\n    },\n\n]\n// End test data\n\n// Day of Week\n\nvar d = new Date();\nvar n = d.getDay()\n\n\nswitch (n) {\ncase 0:\n  n = \"Sunday\";\n  break;\ncase 1:\n  n = \"Monday\";\n  break;\ncase 2:\n  n = \"Tuesday\";\n  break;\ncase 3:\n  n = \"Wednesday\";\n  break;\ncase 4:\n  n = \"Thursday\";\n  break;\ncase 5:\n  n = \"Friday\";\n  break;\ncase 6:\n  n = \"Saturday\";\n}\n\n// End Day of week\n\n\nconst WeatherPage = (props) => {\n    const {name, setName} = useContext(Context);\n    const {location, setLocation} = useContext(Context);\n    var url = `https://api.openweathermap.org/data/2.5/forecast?units=imperial&q=${location}&appid=85f48bfed6f16f0b4ac5840f56199b17`;\n\n    const [weather, setWeather] = useState({\n        temp1: \"\", // We will use 6, 12, 18, 24, 32 as our random points for the weather of the day(s)\n        temp2: \"\",\n        temp3: \"\",\n        temp4: \"\",\n        temp5: \"\",\n        date1: \"\",\n        date2: \"\",\n        date3: \"\",\n        date4: \"\",\n        date5: \"\",\n        day1: \"\",\n        day2: \"\",\n        day3: \"\",\n        day4: \"\",\n        day5: \"\"\n      });\n    \n      useEffect(() => {\n        axios\n          .get(url)\n          .then((res) => {\n            console.log(\"Weather API Response: \", res.data); // If you would like to see what I am returning <------ \n            setWeather({\n              // Day 1\n              temp1: res.data.list[6].main.temp,\n              date1: res.data.list[6].dt_txt,\n              day1: \"Monday\",\n              // Day 2\n              temp2: res.data.list[12].main.temp,\n              date2: res.data.list[12].dt_txt,\n              day2: \"Tuesday\",\n              // Day 3\n              temp3: res.data.list[18].main.temp,\n              date3: res.data.list[18].dt_txt,\n              day3: \"Wednesday\",\n              // Day 4\n              temp4: res.data.list[24].main.temp,\n              date4: res.data.list[24].dt_txt,\n              day4: \"Thusday\",\n              // Day 5\n              temp5: res.data.list[32].main.temp,\n              date5: res.data.list[32].dt_txt,\n              day5: \"Friday\",\n            });\n          })\n          .catch((err) => {\n            console.log(\"Error: \", err);\n          });\n      }, []);\n\n      // Convert weird date/tiem format into more readable format\n        function dateFixer(data){\n            var date2 = data.toString();\n            var date3 = date2.slice(0,10)\n            return date3\n\n        }\n\n        var day1 = dateFixer(weather.date1);\n        var day2 = dateFixer(weather.date2);\n        var day3 = dateFixer(weather.date3);\n        var day4 = dateFixer(weather.date4);\n        var day5 = dateFixer(weather.date5);\n      // End Convert\n\n\n    return(\n        <div className=\"weather-page\">\n            <div className=\"weather-wrapper\">\n                <div className=\"weather-header\">\n                    <h1 className=\"weather-name\">Hi, {name} </h1>\n                    <h3 className=\"weather-forecast-text\">Weather forecast: <p className=\"city-name\">{`\\u00A0`}{location}{`\\u00A0`}</p> for the next 5 days</h3>\n                </div>\n                <div className=\"weather-boxes\">\n                    {/* <p className=\"boxes\">{testData.map((banana) => {\n                        return(\n                        <Card \n                            temp={banana.temp}\n                            day={banana.day}\n                            date={banana.date}\n                        />\n                        )})}\n                    </p> */} \n                    {/* RE Above: I wanted to find a way to map through my API values, but was having trouble so I just hard coded the cards/state but with more time this WOULD be refactored! */}\n                <div className=\"boxes\">\n                    <Card \n                            temp={Math.round(weather.temp1) + '​°'}\n                            // day={n.slice(0,3)} <--- if we want to abreviate to Mon, Tues, Wed, Thu, Fri.\n                            day={n} // <---- This day of the week works, others do not 'yet'--they are hard coded :-)\n                            date={day1}\n                            className={\"card-1\"}\n                        />\n                    <Card \n                            temp={Math.round(weather.temp2) + '​°'}\n                            day={weather.day2}\n                            date={day2}\n                            className={\"card-2\"}\n                        />\n                    <Card \n                            temp={Math.round(weather.temp3) + '​°'}\n                            day={weather.day3}\n                            date={day3}\n                            className={\"card-3\"}\n                        />\n                    <Card \n                            temp={Math.round(weather.temp4) + '​°'}\n                            day={weather.day4}\n                            date={day4}\n                            className={\"card-4\"}\n                        />\n                    <Card   \n                            temp={Math.round(weather.temp5) + '​°'}\n                            day={weather.day5}\n                            date={day5}\n                            className={\"card-5\"}\n                        />\n                </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default WeatherPage;","/Users/andrew/Desktop/Programming/Projects/attributy/src/component/Card.js",[],"/Users/andrew/Desktop/Programming/Projects/attributy/src/component/Context.js",[],"/Users/andrew/Desktop/Programming/Projects/attributy/src/component/Navi.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":47,"nodeType":"61","messageId":"62","endLine":1,"endColumn":57},{"ruleId":"59","severity":1,"message":"63","line":7,"column":8,"nodeType":"61","messageId":"62","endLine":7,"endColumn":12},{"ruleId":"59","severity":1,"message":"64","line":11,"column":8,"nodeType":"61","messageId":"62","endLine":11,"endColumn":12},{"ruleId":"59","severity":1,"message":"65","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"66","line":10,"column":11,"nodeType":"61","messageId":"62","endLine":10,"endColumn":17},{"ruleId":"59","severity":1,"message":"67","line":61,"column":18,"nodeType":"61","messageId":"62","endLine":61,"endColumn":25},{"ruleId":"59","severity":1,"message":"68","line":62,"column":22,"nodeType":"61","messageId":"62","endLine":62,"endColumn":33},{"ruleId":"59","severity":1,"message":"69","line":8,"column":7,"nodeType":"61","messageId":"62","endLine":8,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":44,"column":1,"nodeType":"72","messageId":"73","endLine":65,"endColumn":2},{"ruleId":"59","severity":1,"message":"67","line":71,"column":18,"nodeType":"61","messageId":"62","endLine":71,"endColumn":25},{"ruleId":"59","severity":1,"message":"68","line":72,"column":22,"nodeType":"61","messageId":"62","endLine":72,"endColumn":33},{"ruleId":"74","severity":1,"message":"75","line":124,"column":10,"nodeType":"76","endLine":124,"endColumn":12,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Navi' is defined but never used.","'useState' is defined but never used.","'setter' is assigned a value but never used.","'setName' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'testData' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [url]",{"range":"83","text":"84"},[2809,2811],"[url]"]